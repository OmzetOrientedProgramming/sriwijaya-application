stages:
  - build
  - test
  - deploy

build:
  stage: build
  image: node:latest
  rules:
    - if: $CI_PIPELINE_SOURCE == 'push'
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - npm install
    - npm run build
  cache:
    paths:
      - node_modules/
  artifacts:
    expire_in: 1 days
    when: on_success
    paths:
      - node_modules/

test:
  stage: test
  image: node:latest
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  dependencies:
    - build
  rules:
    - if: $CI_PIPELINE_SOURCE == 'push'
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - npm run test:ci
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml
      cobertura: coverage/cobertura-coverage.xml

SonarScanner:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: ['']
  script:
    - sonar-scanner
      -Dproject.settings=./sonar-project.properties
      -Dsonar.host.url=$SONARQUBE_HOST_URL
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.branch.target=staging
  only:
    - staging

staging:
  stage: deploy
  image: node:latest

  variables:
    PROJECT_NAME: app-wave
    STAGING_URL: $PROJECT_NAME-staging.vercel.app

  rules:
    - if: $CI_COMMIT_BRANCH == 'staging'

  environment:
    name: staging
    url: https://$STAGING_URL

  script:
    - echo "$CI_MERGE_REQUEST_IID"
    - echo "$CI_COMMIT_TAG"
    - echo "$CI_COMMIT_REF_NAME"
    - echo "$CI_COMMIT_BRANCH"
    - echo "$CI_PROJECT_NAME"
    - npm i -g vercel
    - DEPLOYMENT_URL=$(vercel --name $PROJECT_NAME --confirm -t $VERCEL_TOKEN)
    - vercel alias set $DEPLOYMENT_URL $STAGING_URL -t $VERCEL_TOKEN

prod:
  stage: deploy
  image: node:latest

  variables:
    PROJECT_NAME: app-wave
    PROD_URL: $PROJECT_NAME.vercel.app

  rules:
    - if: $CI_COMMIT_BRANCH == 'master'

  environment:
    name: production
    url: https://$PROD_URL

  script:
    - echo "$CI_MERGE_REQUEST_IID"
    - echo "$CI_COMMIT_TAG"
    - echo "$CI_COMMIT_REF_NAME"
    - echo "$CI_COMMIT_BRANCH"
    - echo "$CI_PROJECT_NAME"
    - npm i -g vercel
    - vercel --name $PROJECT_NAME --confirm --prod -t $VERCEL_TOKEN
